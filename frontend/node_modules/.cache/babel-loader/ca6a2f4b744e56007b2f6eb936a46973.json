{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebApp\\\\app-blog\\\\frontend\\\\src\\\\components\\\\blog\\\\Card.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport \"./blog.css\";\nimport { AiOutlineTags, AiOutlineClockCircle, AiOutlineHeart } from \"react-icons/ai\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Context } from \"../../context/Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Card = _ref => {\n  _s();\n\n  let {\n    posts\n  } = _ref;\n  const {\n    user\n  } = useContext(Context);\n  const [likes, setLikes] = useState({}); // Используйте объект для хранения лайков по идентификаторам постов\n\n  const isPostLiked = postId => {\n    return likes[postId] && likes[postId] > 0;\n  };\n\n  const likedPost = postId => {\n    const currentLikes = likes[postId] || 0;\n    setLikes({ ...likes,\n      [postId]: isPostLiked(postId) ? currentLikes - 1 : currentLikes + 1\n    });\n  };\n\n  const handleLikeClick = async item => {\n    likedPost(item._id);\n\n    try {\n      await axios.put(`/posts/${item._id}`, {\n        username: user.username,\n        likes: likes[item._id]\n      });\n    } catch (error) {\n      console.error('Error updating likes:', error.message);\n    }\n  };\n\n  const PublicFlo = \"http://localhost:5000/images/\";\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"blog\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container grid3\",\n        children: posts.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box boxItems\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"img\",\n            children: item.photo && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: PublicFlo + item.photo,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 51\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"details\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tag\",\n              children: [/*#__PURE__*/_jsxDEV(AiOutlineTags, {\n                className: \"icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 19\n              }, this), item.categories.map(c => /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"/\",\n                children: [\"#\", c.name]\n              }, c.name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: `/post/${item._id}`,\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [item.desc.slice(0, 180), \"...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `date ${isPostLiked(item._id) ? 'liked' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(AiOutlineClockCircle, {\n                className: \"icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 19\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"\",\n                children: new Date(item.createdAt).toDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 61\n              }, this), /*#__PURE__*/_jsxDEV(AiOutlineHeart, {\n                className: `icon ${isPostLiked(item._id) ? 'liked-icon' : ''}`,\n                onClick: () => handleLikeClick(item)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"\",\n                children: likes[item._id] || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Card, \"vQkaEKHEZo5vxhGm8cBLeq9I0KA=\");\n\n_c = Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useState","useContext","AiOutlineTags","AiOutlineClockCircle","AiOutlineHeart","Link","axios","Context","Card","posts","user","likes","setLikes","isPostLiked","postId","likedPost","currentLikes","handleLikeClick","item","_id","put","username","error","console","message","PublicFlo","map","photo","categories","c","name","title","desc","slice","Date","createdAt","toDateString","id"],"sources":["D:/WebApp/app-blog/frontend/src/components/blog/Card.jsx"],"sourcesContent":["import React, { useState, useContext} from \"react\"\r\nimport \"./blog.css\"\r\nimport { AiOutlineTags, AiOutlineClockCircle, AiOutlineHeart } from \"react-icons/ai\"\r\nimport { Link } from \"react-router-dom\"\r\nimport axios from \"axios\"\r\nimport { Context } from \"../../context/Context\"\r\n\r\nexport const Card = ({ posts }) => {\r\n  const { user } = useContext(Context);\r\n  const [likes, setLikes] = useState({}); // Используйте объект для хранения лайков по идентификаторам постов\r\n\r\n  const isPostLiked = (postId) => {\r\n    return likes[postId] && likes[postId] > 0;\r\n  };\r\n\r\n  const likedPost = (postId) => {\r\n    const currentLikes = likes[postId] || 0;\r\n    setLikes({ ...likes, [postId]: isPostLiked(postId) ? currentLikes - 1 : currentLikes + 1 });\r\n  };\r\n\r\n  const handleLikeClick = async (item) => {\r\n    likedPost(item._id);\r\n\r\n    try {\r\n      await axios.put(`/posts/${item._id}`, { username: user.username, likes: likes[item._id] });\r\n    } catch (error) {\r\n      console.error('Error updating likes:', error.message);\r\n    }\r\n  };\r\n\r\n  const PublicFlo = \"http://localhost:5000/images/\";\r\n\r\n  return (\r\n    <>\r\n      <section className='blog'>\r\n        <div className='container grid3'>\r\n          {posts.map((item) => (\r\n            <div className='box boxItems' key={item.id}>\r\n              <div className='img'>{item.photo && <img src={PublicFlo + item.photo} alt='' />}</div>\r\n              <div className='details'>\r\n                <div className='tag'>\r\n                  <AiOutlineTags className='icon' />\r\n                  {item.categories.map((c) => (\r\n                    <a href='/' key={c.name}>#{c.name}</a>\r\n                  ))}\r\n                </div>\r\n                <Link to={`/post/${item._id}`}>\r\n                  <h3>{item.title}</h3>\r\n                </Link>\r\n                <p>{item.desc.slice(0, 180)}...</p>\r\n                <div className={`date ${isPostLiked(item._id) ? 'liked' : ''}`}>\r\n                  <AiOutlineClockCircle className='icon' /> <label htmlFor=''>{new Date(item.createdAt).toDateString()}</label>\r\n                  <AiOutlineHeart className={`icon ${isPostLiked(item._id) ? 'liked-icon' : ''}`} onClick={() => handleLikeClick(item)} />\r\n                  <label htmlFor=''>{likes[item._id] || 0}</label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}