{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebApp\\\\app-blog\\\\frontend\\\\src\\\\components\\\\blog\\\\Card.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from \"react\";\nimport \"./blog.css\";\nimport { AiOutlineTags, AiOutlineClockCircle, AiOutlineHeart } from \"react-icons/ai\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Context } from \"../../context/Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Card = _ref => {\n  _s();\n\n  let {\n    posts\n  } = _ref;\n  const {\n    user\n  } = useContext(Context);\n  const {\n    search\n  } = useLocation();\n\n  const handleLikeClick = async item => {\n    try {\n      const updatedPost = await axios.put(`/posts/${item._id}`, {\n        username: user.username\n      }); // Assuming the response contains the updated post details, including likes\n\n      const updatedLikes = updatedPost.data.likes; // Update the like count in the posts array\n\n      const updatedPosts = posts.map(post => post._id === item._id ? { ...post,\n        likes: updatedLikes\n      } : post); // Update the component state to trigger a re-render\n\n      setPosts(updatedPosts);\n    } catch (error) {\n      console.error('Error updating likes:', error.message);\n    }\n  };\n\n  const PublicFlo = \"http://localhost:5000/images\";\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"blog\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container grid3\",\n        children: posts.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box boxItems\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"img\",\n            children: item.photo && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: PublicFlo + item.photo,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 51\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"details\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tag\",\n              children: [/*#__PURE__*/_jsxDEV(AiOutlineTags, {\n                className: \"icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 19\n              }, this), item.categories.map((c, index) => /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"/\",\n                children: [\"#\", c.name]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: `/post/${item._id}`,\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [item.desc.slice(0, 180), \"...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `date ${item.isLiked ? 'liked' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(AiOutlineClockCircle, {\n                className: \"icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 19\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"\",\n                children: new Date(item.createdAt).toDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 61\n              }, this), /*#__PURE__*/_jsxDEV(AiOutlineHeart, {\n                className: `icon ${item.isLiked ? 'liked-icon' : ''}`,\n                onClick: () => handleLikeClick(item)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 19\n              }, this), \" \", item.likes]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Card, \"hb6ca/WVaQjsOSDSoE5h1/K6lL0=\", false, function () {\n  return [useLocation];\n});\n\n_c = Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useState","useContext","useEffect","AiOutlineTags","AiOutlineClockCircle","AiOutlineHeart","Link","useLocation","axios","Context","Card","posts","user","search","handleLikeClick","item","updatedPost","put","_id","username","updatedLikes","data","likes","updatedPosts","map","post","setPosts","error","console","message","PublicFlo","photo","categories","c","index","name","title","desc","slice","isLiked","Date","createdAt","toDateString","id"],"sources":["D:/WebApp/app-blog/frontend/src/components/blog/Card.jsx"],"sourcesContent":["import React, { useState, useContext, useEffect} from \"react\"\r\nimport \"./blog.css\"\r\nimport { AiOutlineTags, AiOutlineClockCircle, AiOutlineHeart } from \"react-icons/ai\"\r\nimport { Link, useLocation } from \"react-router-dom\"\r\nimport axios from \"axios\"\r\nimport { Context } from \"../../context/Context\"\r\n\r\nexport const Card = ({ posts }) => {\r\n  const { user } = useContext(Context);\r\n  const { search } = useLocation();\r\n\r\n  const handleLikeClick = async (item) => {\r\n    try {\r\n      const updatedPost = await axios.put(`/posts/${item._id}`, { username: user.username });\r\n      // Assuming the response contains the updated post details, including likes\r\n      const updatedLikes = updatedPost.data.likes;\r\n      // Update the like count in the posts array\r\n      const updatedPosts = posts.map((post) =>\r\n        post._id === item._id ? { ...post, likes: updatedLikes } : post\r\n      );\r\n      // Update the component state to trigger a re-render\r\n      setPosts(updatedPosts);\r\n    } catch (error) {\r\n      console.error('Error updating likes:', error.message);\r\n    }\r\n  };\r\n\r\n  const PublicFlo = \"http://localhost:5000/images\";\r\n\r\n  return (\r\n    <>\r\n      <section className='blog'>\r\n        <div className='container grid3'>\r\n          {posts.map((item) => (\r\n            <div className='box boxItems' key={item.id}>\r\n              <div className='img'>{item.photo && <img src={PublicFlo + item.photo} alt='' />}</div>\r\n              <div className='details'>\r\n                <div className='tag'>\r\n                  <AiOutlineTags className='icon' />\r\n                  {item.categories.map((c, index) => (\r\n                    <a href='/' key={index}>#{c.name}</a>\r\n                  ))}\r\n                </div>\r\n                <Link to={`/post/${item._id}`}>\r\n                  <h3>{item.title}</h3>\r\n                </Link>\r\n                <p>{item.desc.slice(0, 180)}...</p>\r\n                <div className={`date ${item.isLiked ? 'liked' : ''}`}>\r\n                  <AiOutlineClockCircle className='icon' /> <label htmlFor=''>{new Date(item.createdAt).toDateString()}</label>\r\n                  <AiOutlineHeart className={`icon ${item.isLiked ? 'liked-icon' : ''}`} onClick={() => handleLikeClick(item)} /> {item.likes}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}