{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebApp\\\\app-blog\\\\frontend\\\\src\\\\components\\\\blog\\\\Card.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport \"./blog.css\";\nimport { AiOutlineTags, AiOutlineClockCircle, AiOutlineHeart } from \"react-icons/ai\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Context } from \"../../context/Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Card = _ref => {\n  _s();\n\n  let {\n    posts\n  } = _ref;\n  const {\n    user\n  } = useContext(Context);\n\n  const handleLikeClick = async item => {\n    try {\n      const response = await axios.put(`/posts/${item._id}/like`, {\n        username: user.username\n      }); // Update local state to reflect the updated likes from the server\n\n      const updatedPosts = posts.map(post => post._id === item._id ? { ...post,\n        likes: response.data.likes\n      } : post); // Update the posts state with the modified array\n      // This will trigger a re-render with the updated likes value\n\n      setPosts(updatedPosts);\n    } catch (error) {\n      console.error(\"Error updating likes\", error.message);\n    }\n  }; // ... (other code)\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"blog\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container grid3\",\n        children: posts.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box boxItems\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `date ${isLiked ? \"liked\" : \"\"}`,\n            children: [/*#__PURE__*/_jsxDEV(AiOutlineClockCircle, {\n              className: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"\",\n              children: new Date(item.createdAt).toDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(AiOutlineHeart, {\n              className: `icon ${isLiked ? \"liked-icon\" : \"\"}`,\n              onClick: () => handleLikeClick(item)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"\",\n              children: item.likes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Card, \"y3FQDew7UyrSqYkvQcTdCsLbAB8=\");\n\n_c = Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useState","useContext","AiOutlineTags","AiOutlineClockCircle","AiOutlineHeart","Link","axios","Context","Card","posts","user","handleLikeClick","item","response","put","_id","username","updatedPosts","map","post","likes","data","setPosts","error","console","message","isLiked","Date","createdAt","toDateString","id"],"sources":["D:/WebApp/app-blog/frontend/src/components/blog/Card.jsx"],"sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport \"./blog.css\";\r\nimport { AiOutlineTags, AiOutlineClockCircle, AiOutlineHeart } from \"react-icons/ai\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Context } from \"../../context/Context\";\r\n\r\nexport const Card = ({ posts }) => {\r\n  const { user } = useContext(Context);\r\n\r\n  const handleLikeClick = async (item) => {\r\n    try {\r\n      const response = await axios.put(`/posts/${item._id}/like`, {\r\n        username: user.username,\r\n      });\r\n\r\n      // Update local state to reflect the updated likes from the server\r\n      const updatedPosts = posts.map((post) =>\r\n        post._id === item._id ? { ...post, likes: response.data.likes } : post\r\n      );\r\n\r\n      // Update the posts state with the modified array\r\n      // This will trigger a re-render with the updated likes value\r\n      setPosts(updatedPosts);\r\n    } catch (error) {\r\n      console.error(\"Error updating likes\", error.message);\r\n    }\r\n  };\r\n\r\n  // ... (other code)\r\n\r\n  return (\r\n    <>\r\n      <section className=\"blog\">\r\n        <div className=\"container grid3\">\r\n          {posts.map((item) => (\r\n            <div className=\"box boxItems\" key={item.id}>\r\n              {/* other code... */}\r\n\r\n              <div className={`date ${isLiked ? \"liked\" : \"\"}`}>\r\n                <AiOutlineClockCircle className=\"icon\" />{\" \"}\r\n                <label htmlFor=\"\">{new Date(item.createdAt).toDateString()}</label>\r\n                <AiOutlineHeart\r\n                  className={`icon ${isLiked ? \"liked-icon\" : \"\"}`}\r\n                  onClick={() => handleLikeClick(item)}\r\n                />\r\n                <label htmlFor=\"\">{item.likes}</label>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAO,YAAP;AACA,SAASC,aAAT,EAAwBC,oBAAxB,EAA8CC,cAA9C,QAAoE,gBAApE;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,uBAAxB;;;AAEA,OAAO,MAAMC,IAAI,GAAG,QAAe;EAAA;;EAAA,IAAd;IAAEC;EAAF,CAAc;EACjC,MAAM;IAAEC;EAAF,IAAWT,UAAU,CAACM,OAAD,CAA3B;;EAEA,MAAMI,eAAe,GAAG,MAAOC,IAAP,IAAgB;IACtC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAW,UAASF,IAAI,CAACG,GAAI,OAA7B,EAAqC;QAC1DC,QAAQ,EAAEN,IAAI,CAACM;MAD2C,CAArC,CAAvB,CADE,CAKF;;MACA,MAAMC,YAAY,GAAGR,KAAK,CAACS,GAAN,CAAWC,IAAD,IAC7BA,IAAI,CAACJ,GAAL,KAAaH,IAAI,CAACG,GAAlB,GAAwB,EAAE,GAAGI,IAAL;QAAWC,KAAK,EAAEP,QAAQ,CAACQ,IAAT,CAAcD;MAAhC,CAAxB,GAAkED,IAD/C,CAArB,CANE,CAUF;MACA;;MACAG,QAAQ,CAACL,YAAD,CAAR;IACD,CAbD,CAaE,OAAOM,KAAP,EAAc;MACdC,OAAO,CAACD,KAAR,CAAc,sBAAd,EAAsCA,KAAK,CAACE,OAA5C;IACD;EACF,CAjBD,CAHiC,CAsBjC;;;EAEA,oBACE;IAAA,uBACE;MAAS,SAAS,EAAC,MAAnB;MAAA,uBACE;QAAK,SAAS,EAAC,iBAAf;QAAA,UACGhB,KAAK,CAACS,GAAN,CAAWN,IAAD,iBACT;UAAK,SAAS,EAAC,cAAf;UAAA,uBAGE;YAAK,SAAS,EAAG,QAAOc,OAAO,GAAG,OAAH,GAAa,EAAG,EAA/C;YAAA,wBACE,QAAC,oBAAD;cAAsB,SAAS,EAAC;YAAhC;cAAA;cAAA;cAAA;YAAA,QADF,EAC4C,GAD5C,eAEE;cAAO,OAAO,EAAC,EAAf;cAAA,UAAmB,IAAIC,IAAJ,CAASf,IAAI,CAACgB,SAAd,EAAyBC,YAAzB;YAAnB;cAAA;cAAA;cAAA;YAAA,QAFF,eAGE,QAAC,cAAD;cACE,SAAS,EAAG,QAAOH,OAAO,GAAG,YAAH,GAAkB,EAAG,EADjD;cAEE,OAAO,EAAE,MAAMf,eAAe,CAACC,IAAD;YAFhC;cAAA;cAAA;cAAA;YAAA,QAHF,eAOE;cAAO,OAAO,EAAC,EAAf;cAAA,UAAmBA,IAAI,CAACQ;YAAxB;cAAA;cAAA;cAAA;YAAA,QAPF;UAAA;YAAA;YAAA;YAAA;UAAA;QAHF,GAAmCR,IAAI,CAACkB,EAAxC;UAAA;UAAA;UAAA;QAAA,QADD;MADH;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAuBD,CA/CM;;GAAMtB,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}