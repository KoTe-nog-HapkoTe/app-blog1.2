{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebApp\\\\app-blog\\\\frontend\\\\src\\\\components\\\\blog\\\\Card.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport \"./blog.css\";\nimport { AiOutlineTags, AiOutlineClockCircle, AiOutlineHeart } from \"react-icons/ai\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Context } from \"../../context/Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Card = _ref => {\n  _s();\n\n  let {\n    posts\n  } = _ref;\n  const {\n    user\n  } = useContext(Context);\n  const [isLiked, setIsLiked] = useState(false);\n\n  const likedPost = () => {\n    setIsLiked(!isLiked);\n  };\n\n  const handleLikeClick = async item => {\n    likedPost();\n\n    try {\n      const response = await axios.put(`/posts/${item._id}`, {\n        username: user.username\n      });\n      const updatedLikes = response.data.likes; // Получаем актуальное количество лайков с сервера\n\n      console.log(updatedLikes); // Вместо использования локального состояния likes, отображаем актуальное количество лайков\n\n      const updatedPosts = posts.map(post => post._id === item._id ? { ...post,\n        likes: updatedLikes\n      } : post); // Обновляем компонент с новыми данными\n\n      setPosts(updatedPosts);\n    } catch (error) {\n      console.error('Error updating likes:', error.message);\n    }\n  };\n\n  const PublicFlo = \"http://localhost:5000/images/\";\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"blog\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container grid3\",\n        children: posts.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box boxItems\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"img\",\n            children: item.photo && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: PublicFlo + item.photo,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 51\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"details\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tag\",\n              children: [/*#__PURE__*/_jsxDEV(AiOutlineTags, {\n                className: \"icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 19\n              }, this), item.categories.map(c => /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"/\",\n                children: [\"#\", c.name]\n              }, c.name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: `/post/${item._id}`,\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [item.desc.slice(0, 180), \"...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `date ${isLiked ? 'liked' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(AiOutlineClockCircle, {\n                className: \"icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 19\n              }, this), ' ', /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"\",\n                children: new Date(item.createdAt).toDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(AiOutlineHeart, {\n                className: `icon ${isLiked ? 'liked-icon' : ''}`,\n                onClick: () => handleLikeClick(item)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"\",\n                children: item.likes\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Card, \"xE9I4LjtMaa9VmKs4fUMm44QEIc=\");\n\n_c = Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useState","useContext","AiOutlineTags","AiOutlineClockCircle","AiOutlineHeart","Link","axios","Context","Card","posts","user","isLiked","setIsLiked","likedPost","handleLikeClick","item","response","put","_id","username","updatedLikes","data","likes","console","log","updatedPosts","map","post","setPosts","error","message","PublicFlo","photo","categories","c","name","title","desc","slice","Date","createdAt","toDateString","id"],"sources":["D:/WebApp/app-blog/frontend/src/components/blog/Card.jsx"],"sourcesContent":["import React, { useState, useContext} from \"react\"\r\nimport \"./blog.css\"\r\nimport { AiOutlineTags, AiOutlineClockCircle, AiOutlineHeart } from \"react-icons/ai\"\r\nimport { Link} from \"react-router-dom\"\r\nimport axios from \"axios\"\r\nimport { Context } from \"../../context/Context\"\r\n\r\nexport const Card = ({ posts }) => {\r\n  const { user } = useContext(Context);\r\n  const [isLiked, setIsLiked] = useState(false);\r\n\r\n  const likedPost = () => {\r\n    setIsLiked(!isLiked);\r\n  };\r\n\r\n  const handleLikeClick = async (item) => {\r\n    likedPost();\r\n\r\n    try {\r\n      const response = await axios.put(`/posts/${item._id}`, { username: user.username });\r\n      const updatedLikes = response.data.likes; // Получаем актуальное количество лайков с сервера\r\n      console.log(updatedLikes);\r\n\r\n      // Вместо использования локального состояния likes, отображаем актуальное количество лайков\r\n      const updatedPosts = posts.map((post) =>\r\n        post._id === item._id ? { ...post, likes: updatedLikes } : post\r\n      );\r\n\r\n      // Обновляем компонент с новыми данными\r\n      setPosts(updatedPosts);\r\n    } catch (error) {\r\n      console.error('Error updating likes:', error.message);\r\n    }\r\n  };\r\n\r\n  const PublicFlo = \"http://localhost:5000/images/\";\r\n\r\n  return (\r\n    <>\r\n      <section className='blog'>\r\n        <div className='container grid3'>\r\n          {posts.map((item) => (\r\n            <div className='box boxItems' key={item.id}>\r\n              <div className='img'>{item.photo && <img src={PublicFlo + item.photo} alt='' />}</div>\r\n              <div className='details'>\r\n                <div className='tag'>\r\n                  <AiOutlineTags className='icon' />\r\n                  {item.categories.map((c) => (\r\n                    <a href='/' key={c.name}>\r\n                      #{c.name}\r\n                    </a>\r\n                  ))}\r\n                </div>\r\n                <Link to={`/post/${item._id}`}>\r\n                  <h3>{item.title}</h3>\r\n                </Link>\r\n                <p>{item.desc.slice(0, 180)}...</p>\r\n                <div className={`date ${isLiked ? 'liked' : ''}`}>\r\n                  <AiOutlineClockCircle className='icon' />{' '}\r\n                  <label htmlFor=''>{new Date(item.createdAt).toDateString()}</label>\r\n                  <AiOutlineHeart\r\n                    className={`icon ${isLiked ? 'liked-icon' : ''}`}\r\n                    onClick={() => handleLikeClick(item)}\r\n                  />\r\n                  <label htmlFor=''>{item.likes}</label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}