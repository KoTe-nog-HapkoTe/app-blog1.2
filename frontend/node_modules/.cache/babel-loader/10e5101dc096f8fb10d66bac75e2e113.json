{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebApp\\\\app-blog\\\\frontend\\\\src\\\\components\\\\drawing\\\\Editor.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from \"react\";\nimport \"./editor.scss\";\nimport { ChromePicker, CirclePicker } from \"react-color\";\nimport DrawingPanel from \"./DrawingPanel\";\nimport ColorMatrix from \"./ColorMatrix\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\nimport { Context } from \"../../context/Context\";\nimport { Card } from \"../blog/Card\"; //import { print,colors } from \"../../assets/data/data\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Editor = () => {\n  _s();\n\n  const [panelWidth, setPanelWidth] = useState(4);\n  const [panelHeight, setPanelHeight] = useState(4);\n  const [hideOptions, setHideOptions] = useState(false);\n  const [hideDrawingPanel, setHideDrawingPanel] = useState(true);\n  const [buttonText, setButtonText] = useState(\"start drawing\");\n  const [selectedColor, setColor] = useState(\"#f44336\");\n\n  function initializeDrawingPanel() {\n    setHideOptions(!hideOptions);\n    setHideDrawingPanel(!hideDrawingPanel);\n    buttonText === \"start drawing\" ? setButtonText(\"reset\") : setButtonText(\"start drawing\");\n  }\n\n  function changeColor(color) {\n    setColor(color.hex);\n  } //--------------------------------------------------------------\n\n\n  const {\n    user\n  } = useContext(Context);\n  const [prints, setPrints] = useState([]);\n  const {\n    search\n  } = useLocation();\n  useEffect(() => {\n    const fetchPrints = async () => {\n      const res = await axios.get(\"/prints\" + search);\n      setPrints(res.data);\n    };\n\n    fetchPrints();\n  }, [search]); //--------------------------------------------------------\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"editor\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"tool\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"cip\",\n        children: /*#__PURE__*/_jsxDEV(CirclePicker, {\n          color: selectedColor,\n          onChangeComplete: changeColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"chp\",\n        children: /*#__PURE__*/_jsxDEV(ChromePicker, {\n          color: selectedColor,\n          onChange: changeColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"workspace\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Pixel Editor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), hideDrawingPanel && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Enter Panel Dimensions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 30\n      }, this), hideDrawingPanel && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"options\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"panelInput\",\n            defaultValue: panelWidth,\n            onChange: e => {\n              const value = Math.min(parseInt(e.target.value, 10), 5);\n              setPanelWidth(value);\n            },\n            max: 5\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Width\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"panelInput\",\n            defaultValue: panelHeight,\n            onChange: e => {\n              const value = Math.min(parseInt(e.target.value, 10), 512);\n              setPanelHeight(value);\n            },\n            max: 512\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Height\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: initializeDrawingPanel,\n        className: \"button\",\n        children: buttonText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), hideOptions && /*#__PURE__*/_jsxDEV(DrawingPanel, {\n        width: panelWidth,\n        height: panelHeight,\n        selectedColor: selectedColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"printList\",\n      children: user ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slides\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"clrmatr\",\n          children: prints.map((prints, index) => /*#__PURE__*/_jsxDEV(ColorMatrix, { ...prints\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \" to login \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Editor, \"bGtBPbifVdvoWOF4VevWF1ILe5Y=\", false, function () {\n  return [useLocation];\n});\n\n_c = Editor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["React","useState","useContext","useEffect","ChromePicker","CirclePicker","DrawingPanel","ColorMatrix","axios","Link","useLocation","Context","Card","Editor","panelWidth","setPanelWidth","panelHeight","setPanelHeight","hideOptions","setHideOptions","hideDrawingPanel","setHideDrawingPanel","buttonText","setButtonText","selectedColor","setColor","initializeDrawingPanel","changeColor","color","hex","user","prints","setPrints","search","fetchPrints","res","get","data","e","value","Math","min","parseInt","target","map","index"],"sources":["D:/WebApp/app-blog/frontend/src/components/drawing/Editor.jsx"],"sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\nimport \"./editor.scss\";\r\nimport { ChromePicker, CirclePicker } from \"react-color\";\r\nimport DrawingPanel from \"./DrawingPanel\";\r\nimport ColorMatrix from \"./ColorMatrix\"\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\"\r\nimport { useLocation } from \"react-router-dom\"\r\nimport { Context } from \"../../context/Context\"\r\nimport { Card } from \"../blog/Card\";\r\n//import { print,colors } from \"../../assets/data/data\"\r\n\r\nexport const Editor = () => {\r\n  const [panelWidth, setPanelWidth] = useState(4);\r\n  const [panelHeight, setPanelHeight] = useState(4);\r\n  const [hideOptions, setHideOptions] = useState(false);\r\n  const [hideDrawingPanel, setHideDrawingPanel] = useState(true);\r\n  const [buttonText, setButtonText] = useState(\"start drawing\");\r\n  const [selectedColor, setColor] = useState(\"#f44336\");\r\n\r\n  function initializeDrawingPanel() {\r\n    setHideOptions(!hideOptions);\r\n    setHideDrawingPanel(!hideDrawingPanel);\r\n\r\n    buttonText === \"start drawing\"\r\n      ? setButtonText(\"reset\")\r\n      : setButtonText(\"start drawing\");\r\n  }\r\n\r\n  function changeColor(color) {\r\n    setColor(color.hex);\r\n  }\r\n\r\n\r\n//--------------------------------------------------------------\r\n  const { user } = useContext(Context);\r\n\r\n  const [prints, setPrints] = useState([]);\r\n\r\n  const { search } = useLocation()\r\n\r\n  useEffect(() => {\r\n    const fetchPrints = async () => {\r\n      const res = await axios.get(\"/prints\" + search)\r\n      setPrints(res.data)\r\n    }\r\n    fetchPrints ()\r\n  }, [search])\r\n\r\n//--------------------------------------------------------\r\n  return (\r\n    <div id=\"editor\">\r\n\r\n      <div id=\"tool\">\r\n        <div id=\"cip\">\r\n          <CirclePicker color={selectedColor} onChangeComplete={changeColor}  />\r\n        </div>\r\n        <div id=\"chp\">\r\n          <ChromePicker color={selectedColor} onChange={changeColor} />\r\n        </div>\r\n      </div>\r\n      \r\n      <div id=\"workspace\">\r\n        <h1>Pixel Editor</h1>\r\n        {hideDrawingPanel && <h2>Enter Panel Dimensions</h2>}\r\n        {hideDrawingPanel && (\r\n          <div id=\"options\">\r\n            <div className=\"option\">\r\n            <input\r\n              type=\"number\"\r\n              className=\"panelInput\"\r\n              defaultValue={panelWidth}\r\n              onChange={(e) => {\r\n                const value = Math.min(parseInt(e.target.value, 10), 5);\r\n                setPanelWidth(value);\r\n              }}\r\n              max={5}\r\n            />\r\n              <span>Width</span>\r\n            </div>\r\n            <div className=\"option\">\r\n              <input\r\n                type=\"number\"\r\n                className=\"panelInput\"\r\n                defaultValue={panelHeight}\r\n                onChange={(e) => {\r\n                  const value = Math.min(parseInt(e.target.value, 10), 512);\r\n                  setPanelHeight(value);\r\n                }}\r\n                max={512}\r\n              />\r\n              <span>Height</span>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <button onClick={initializeDrawingPanel} className=\"button\">\r\n          {buttonText}\r\n        </button>\r\n\r\n        {hideOptions && (\r\n          <DrawingPanel\r\n            width={panelWidth}\r\n            height={panelHeight}\r\n            selectedColor={selectedColor}\r\n          />\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"printList\">\r\n        {user ?(\r\n            <div className=\"slides\">\r\n              \r\n              <div className=\"clrmatr\">\r\n                {prints.map((prints, index) => (\r\n                  <ColorMatrix key={index} {...prints} />\r\n                ))}\r\n              </div> \r\n\r\n\r\n              \r\n            </div>\r\n          ):(\r\n            <button className=\"button\">\r\n              <Link to=\"/login\"> to login </Link>\r\n            </button>\r\n          )}\r\n      </div>\r\n      \r\n\r\n    </div>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}