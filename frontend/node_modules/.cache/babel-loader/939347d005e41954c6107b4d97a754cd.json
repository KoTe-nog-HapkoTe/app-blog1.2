{"ast":null,"code":"'use client';\n\nimport { usePointerEvent } from \"./chunk-ZCYNKCF5.mjs\"; // src/use-focus-on-pointerdown.ts\n\nimport { contains, detectBrowser, focus, getOwnerDocument, isActiveElement, isRefObject } from \"@chakra-ui/utils\";\n\nfunction useFocusOnPointerDown(props) {\n  const {\n    ref,\n    elements,\n    enabled\n  } = props;\n  const isSafari = detectBrowser(\"Safari\");\n\n  const doc = () => getOwnerDocument(ref.current);\n\n  usePointerEvent(doc, \"pointerdown\", event => {\n    if (!isSafari || !enabled) return;\n    const target = event.target;\n    const els = elements != null ? elements : [ref];\n    const isValidTarget = els.some(elementOrRef => {\n      const el = isRefObject(elementOrRef) ? elementOrRef.current : elementOrRef;\n      return contains(el, target);\n    });\n\n    if (!isActiveElement(target) && isValidTarget) {\n      event.preventDefault();\n      focus(target);\n    }\n  });\n}\n\nexport { useFocusOnPointerDown };","map":{"version":3,"mappings":";;;;AAAA,SACEA,QADF,EAEEC,aAFF,EAGEC,KAHF,EAIEC,gBAJF,EAKEC,eALF,EAMEC,WANF,QAOO,kBAPP;;AAyBO,SAASC,qBAAT,CAA+BC,KAA/B,EAAgE;EACrE,MAAM;IAAEC,GAAF;IAAOC,QAAP;IAAiBC;EAAjB,IAA6BH,KAAnC;EAEA,MAAMI,WAAWV,cAAc,QAAd,CAAjB;;EACA,MAAMW,MAAM,MAAMT,iBAAiBK,IAAIK,OAArB,CAAlB;;EAEAC,gBAAgBF,GAAhB,EAAqB,aAArB,EAAqCG,KAAD,IAAW;IAC7C,IAAI,CAACJ,QAAD,IAAa,CAACD,OAAlB,EAA2B;IAC3B,MAAMM,SAASD,MAAMC,MAArB;IAEA,MAAMC,MAAMR,8BAAY,CAACD,GAAD,CAAxB;IACA,MAAMU,gBAAgBD,IAAIE,IAAJ,CAAUC,YAAD,IAAkB;MAC/C,MAAMC,KAAKhB,YAAYe,YAAZ,IAA4BA,aAAaP,OAAzC,GAAmDO,YAA9D;MACA,OAAOpB,SAASqB,EAAT,EAAaL,MAAb,CAAP;IACD,CAHqB,CAAtB;;IAKA,IAAI,CAACZ,gBAAgBY,MAAhB,CAAD,IAA4BE,aAAhC,EAA+C;MAC7CH,MAAMO,cAAN;MACApB,MAAMc,MAAN;IACF;EACD,CAdD;AAeF","names":["contains","detectBrowser","focus","getOwnerDocument","isActiveElement","isRefObject","useFocusOnPointerDown","props","ref","elements","enabled","isSafari","doc","current","usePointerEvent","event","target","els","isValidTarget","some","elementOrRef","el","preventDefault"],"sources":["D:\\WebApp\\app-blog\\frontend\\node_modules\\@chakra-ui\\hooks\\src\\use-focus-on-pointerdown.ts"],"sourcesContent":["import {\n  contains,\n  detectBrowser,\n  focus,\n  getOwnerDocument,\n  isActiveElement,\n  isRefObject,\n} from \"@chakra-ui/utils\"\nimport { usePointerEvent } from \"./use-pointer-event\"\n\nexport interface UseFocusOnMouseDownProps {\n  enabled?: boolean\n  ref: React.RefObject<HTMLElement>\n  elements?: Array<React.RefObject<HTMLElement> | HTMLElement | null>\n}\n\n/**\n * Polyfill to get `relatedTarget` working correctly consistently\n * across all browsers.\n *\n * It ensures that elements receives focus on pointer down if\n * it's not the active element.\n *\n * @internal\n */\nexport function useFocusOnPointerDown(props: UseFocusOnMouseDownProps) {\n  const { ref, elements, enabled } = props\n\n  const isSafari = detectBrowser(\"Safari\")\n  const doc = () => getOwnerDocument(ref.current)\n\n  usePointerEvent(doc, \"pointerdown\", (event) => {\n    if (!isSafari || !enabled) return\n    const target = event.target as HTMLElement\n\n    const els = elements ?? [ref]\n    const isValidTarget = els.some((elementOrRef) => {\n      const el = isRefObject(elementOrRef) ? elementOrRef.current : elementOrRef\n      return contains(el, target)\n    })\n\n    if (!isActiveElement(target) && isValidTarget) {\n      event.preventDefault()\n      focus(target)\n    }\n  })\n}\n"]},"metadata":{},"sourceType":"module"}