{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebApp\\\\app-blog\\\\frontend\\\\src\\\\components\\\\drawing\\\\DrawingPanel.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useContext, useEffect } from \"react\";\nimport \"./drawingPanel.scss\";\nimport Row from \"./Row\";\nimport { Link } from \"react-router-dom\";\nimport { exportComponentAsPNG } from \"react-component-export-image\";\nimport axios from \"axios\";\nimport { Context } from \"../../context/Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DrawingPanel(props) {\n  _s();\n\n  const {\n    user\n  } = useContext(Context);\n  const {\n    width,\n    height,\n    selectedColor\n  } = props;\n  const panelRef = useRef();\n  let rows = [];\n\n  for (let i = 0; i < height; i++) {\n    rows.push( /*#__PURE__*/_jsxDEV(Row, {\n      width: width,\n      selectedColor: selectedColor\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 15\n    }, this));\n  } // console.log(rows)\n\n\n  const [backgroundColors, setBackgroundColors] = useState([]);\n\n  const rgbToHex = rgb => {\n    const hex = rgb.replace(/^rgba?\\(|\\s+|\\)$/g, '').split(',').map(value => {\n      const intValue = parseInt(value, 10);\n      const hexValue = intValue.toString(16);\n      return hexValue.length === 1 ? '0' + hexValue : hexValue;\n    }).join('');\n    return `#${hex}`;\n  }; //------------------------------------back---\n\n\n  const sendColorsToBackend = async colors => {\n    const newPrint = {\n      colors: colors,\n      width: width\n    };\n\n    try {\n      await axios.post('/prints', newPrint);\n      window.location.replace(\"/drawing\");\n    } catch (error) {\n      console.error('hueta', error.message);\n    }\n  }; //------------------------------------back---\n\n\n  const getBackgroundColors = () => {\n    const pixelsContainer = document.getElementById('pixels');\n\n    if (pixelsContainer) {\n      const pixels = pixelsContainer.getElementsByTagName('div');\n      const colors = [];\n\n      for (let i = 0; i < pixels.length; i++) {\n        const pixel = pixels[i];\n        const computedStyle = window.getComputedStyle(pixel);\n        const backgroundColor = computedStyle.backgroundColor;\n        const hexColor = rgbToHex(backgroundColor);\n        colors.push(hexColor);\n      }\n\n      setBackgroundColors(colors);\n      sendColorsToBackend(colors);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"drawingPanel\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"pixels\",\n      required: true,\n      ref: panelRef,\n      children: rows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => exportComponentAsPNG(panelRef),\n        className: \"button\",\n        children: \"Export as PNG\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), user ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: getBackgroundColors,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \" to login \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DrawingPanel, \"iz+Y2T9/Ffr267srZxJO7rXIEoU=\");\n\n_c = DrawingPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"DrawingPanel\");","map":{"version":3,"names":["React","useState","useRef","useContext","useEffect","Row","Link","exportComponentAsPNG","axios","Context","DrawingPanel","props","user","width","height","selectedColor","panelRef","rows","i","push","backgroundColors","setBackgroundColors","rgbToHex","rgb","hex","replace","split","map","value","intValue","parseInt","hexValue","toString","length","join","sendColorsToBackend","colors","newPrint","post","window","location","error","console","message","getBackgroundColors","pixelsContainer","document","getElementById","pixels","getElementsByTagName","pixel","computedStyle","getComputedStyle","backgroundColor","hexColor"],"sources":["D:/WebApp/app-blog/frontend/src/components/drawing/DrawingPanel.jsx"],"sourcesContent":["import React, {useState , useRef, useContext, useEffect } from \"react\";\r\nimport \"./drawingPanel.scss\";\r\nimport Row from \"./Row\";\r\nimport { Link } from \"react-router-dom\"\r\nimport { exportComponentAsPNG } from \"react-component-export-image\";\r\nimport axios from \"axios\";\r\nimport { Context } from \"../../context/Context\"\r\n\r\n\r\n\r\nexport default function DrawingPanel(props) {\r\n\r\n  const { user } = useContext(Context)\r\n\r\n  const { width, height, selectedColor } = props;\r\n\r\n  const panelRef = useRef();\r\n\r\n  let rows = [];\r\n\r\n  for (let i = 0; i < height; i++) {\r\n    rows.push(<Row key={i} width={width} selectedColor={selectedColor} />);\r\n  }\r\n\r\n  // console.log(rows)\r\n  const [backgroundColors, setBackgroundColors] = useState([]);\r\n\r\n  const rgbToHex = (rgb) => {\r\n    const hex = rgb\r\n      .replace(/^rgba?\\(|\\s+|\\)$/g, '')\r\n      .split(',')\r\n      .map((value) => {\r\n        const intValue = parseInt(value, 10);\r\n        const hexValue = intValue.toString(16);\r\n        return hexValue.length === 1 ? '0' + hexValue : hexValue;\r\n      })\r\n      .join('');\r\n    return `#${hex}`;\r\n  };\r\n  //------------------------------------back---\r\n  const sendColorsToBackend = async (colors) =>{\r\n\r\n    const newPrint = {\r\n      colors: colors,\r\n      width: width,\r\n    }\r\n\r\n    try {\r\n      await axios.post('/prints', newPrint);\r\n      window.location.replace(\"/drawing\")\r\n    } catch (error) {\r\n      console.error('hueta', error.message);\r\n    }\r\n  }\r\n  //------------------------------------back---\r\n\r\n  const getBackgroundColors =  () => {\r\n\r\n    const pixelsContainer = document.getElementById('pixels');\r\n    if (pixelsContainer) {\r\n      const pixels = pixelsContainer.getElementsByTagName('div');\r\n      const colors = [];\r\n\r\n      for (let i = 0; i < pixels.length; i++) {\r\n        const pixel = pixels[i];\r\n        const computedStyle = window.getComputedStyle(pixel);\r\n        const backgroundColor = computedStyle.backgroundColor;\r\n\r\n        const hexColor = rgbToHex(backgroundColor);\r\n        colors.push(hexColor);\r\n      }\r\n\r\n      setBackgroundColors(colors);\r\n      sendColorsToBackend(colors);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div id=\"drawingPanel\">\r\n        <div id=\"pixels\" required ref={panelRef}>\r\n          {rows}\r\n        </div>\r\n        <div id=\"buttons\">\r\n          <button onClick={() => exportComponentAsPNG(panelRef)} className=\"button\">\r\n            Export as PNG\r\n          </button>\r\n          {user ?(\r\n            <button className=\"button\" onClick={getBackgroundColors} >\r\n              +\r\n            </button>\r\n          ):(        \r\n            <button className=\"button\">\r\n              <Link to=\"/login\"> to login </Link>\r\n            </button>         \r\n          )}\r\n          \r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAA0BC,MAA1B,EAAkCC,UAAlC,EAA8CC,SAA9C,QAA+D,OAA/D;AACA,OAAO,qBAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,oBAAT,QAAqC,8BAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,uBAAxB;;AAIA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;EAAA;;EAE1C,MAAM;IAAEC;EAAF,IAAWT,UAAU,CAACM,OAAD,CAA3B;EAEA,MAAM;IAAEI,KAAF;IAASC,MAAT;IAAiBC;EAAjB,IAAmCJ,KAAzC;EAEA,MAAMK,QAAQ,GAAGd,MAAM,EAAvB;EAEA,IAAIe,IAAI,GAAG,EAAX;;EAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,MAApB,EAA4BI,CAAC,EAA7B,EAAiC;IAC/BD,IAAI,CAACE,IAAL,eAAU,QAAC,GAAD;MAAa,KAAK,EAAEN,KAApB;MAA2B,aAAa,EAAEE;IAA1C,GAAUG,CAAV;MAAA;MAAA;MAAA;IAAA,QAAV;EACD,CAZyC,CAc1C;;;EACA,MAAM,CAACE,gBAAD,EAAmBC,mBAAnB,IAA0CpB,QAAQ,CAAC,EAAD,CAAxD;;EAEA,MAAMqB,QAAQ,GAAIC,GAAD,IAAS;IACxB,MAAMC,GAAG,GAAGD,GAAG,CACZE,OADS,CACD,mBADC,EACoB,EADpB,EAETC,KAFS,CAEH,GAFG,EAGTC,GAHS,CAGJC,KAAD,IAAW;MACd,MAAMC,QAAQ,GAAGC,QAAQ,CAACF,KAAD,EAAQ,EAAR,CAAzB;MACA,MAAMG,QAAQ,GAAGF,QAAQ,CAACG,QAAT,CAAkB,EAAlB,CAAjB;MACA,OAAOD,QAAQ,CAACE,MAAT,KAAoB,CAApB,GAAwB,MAAMF,QAA9B,GAAyCA,QAAhD;IACD,CAPS,EAQTG,IARS,CAQJ,EARI,CAAZ;IASA,OAAQ,IAAGV,GAAI,EAAf;EACD,CAXD,CAjB0C,CA6B1C;;;EACA,MAAMW,mBAAmB,GAAG,MAAOC,MAAP,IAAiB;IAE3C,MAAMC,QAAQ,GAAG;MACfD,MAAM,EAAEA,MADO;MAEfvB,KAAK,EAAEA;IAFQ,CAAjB;;IAKA,IAAI;MACF,MAAML,KAAK,CAAC8B,IAAN,CAAW,SAAX,EAAsBD,QAAtB,CAAN;MACAE,MAAM,CAACC,QAAP,CAAgBf,OAAhB,CAAwB,UAAxB;IACD,CAHD,CAGE,OAAOgB,KAAP,EAAc;MACdC,OAAO,CAACD,KAAR,CAAc,OAAd,EAAuBA,KAAK,CAACE,OAA7B;IACD;EACF,CAbD,CA9B0C,CA4C1C;;;EAEA,MAAMC,mBAAmB,GAAI,MAAM;IAEjC,MAAMC,eAAe,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAxB;;IACA,IAAIF,eAAJ,EAAqB;MACnB,MAAMG,MAAM,GAAGH,eAAe,CAACI,oBAAhB,CAAqC,KAArC,CAAf;MACA,MAAMb,MAAM,GAAG,EAAf;;MAEA,KAAK,IAAIlB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8B,MAAM,CAACf,MAA3B,EAAmCf,CAAC,EAApC,EAAwC;QACtC,MAAMgC,KAAK,GAAGF,MAAM,CAAC9B,CAAD,CAApB;QACA,MAAMiC,aAAa,GAAGZ,MAAM,CAACa,gBAAP,CAAwBF,KAAxB,CAAtB;QACA,MAAMG,eAAe,GAAGF,aAAa,CAACE,eAAtC;QAEA,MAAMC,QAAQ,GAAGhC,QAAQ,CAAC+B,eAAD,CAAzB;QACAjB,MAAM,CAACjB,IAAP,CAAYmC,QAAZ;MACD;;MAEDjC,mBAAmB,CAACe,MAAD,CAAnB;MACAD,mBAAmB,CAACC,MAAD,CAAnB;IACD;EACF,CAnBD;;EAsBA,oBACE;IAAK,EAAE,EAAC,cAAR;IAAA,wBACI;MAAK,EAAE,EAAC,QAAR;MAAiB,QAAQ,MAAzB;MAA0B,GAAG,EAAEpB,QAA/B;MAAA,UACGC;IADH;MAAA;MAAA;MAAA;IAAA,QADJ,eAII;MAAK,EAAE,EAAC,SAAR;MAAA,wBACE;QAAQ,OAAO,EAAE,MAAMV,oBAAoB,CAACS,QAAD,CAA3C;QAAuD,SAAS,EAAC,QAAjE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,EAIGJ,IAAI,gBACH;QAAQ,SAAS,EAAC,QAAlB;QAA2B,OAAO,EAAEgC,mBAApC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADG,gBAKH;QAAQ,SAAS,EAAC,QAAlB;QAAA,uBACE,QAAC,IAAD;UAAM,EAAE,EAAC,QAAT;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QATJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAJJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAsBD;;GA1FuBlC,Y;;KAAAA,Y"},"metadata":{},"sourceType":"module"}