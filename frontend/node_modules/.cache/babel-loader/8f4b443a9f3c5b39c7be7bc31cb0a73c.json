{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebApp\\\\app-blog\\\\frontend\\\\src\\\\components\\\\drawing\\\\Editor.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from \"react\";\nimport \"./editor.scss\";\nimport { ChromePicker, CirclePicker } from \"react-color\";\nimport DrawingPanel from \"./DrawingPanel\";\nimport ColorMatrix from \"./ColorMatrix\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\nimport { Context } from \"../../context/Context\";\nimport { Card } from \"../blog/Card\"; //import { print,colors } from \"../../assets/data/data\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Editor = () => {\n  _s();\n\n  const [panelWidth, setPanelWidth] = useState(16);\n  const [panelHeight, setPanelHeight] = useState(16);\n  const [hideOptions, setHideOptions] = useState(false);\n  const [hideDrawingPanel, setHideDrawingPanel] = useState(true);\n  const [buttonText, setButtonText] = useState(\"start drawing\");\n  const [selectedColor, setColor] = useState(\"#f44336\");\n  const [colorsData, setColorsData] = useState([]);\n  const {\n    user\n  } = useContext(Context); //-------------------------back-----------------------------\n\n  const PublicFlo = \"http://localhost:5000/images/\";\n  const {\n    search\n  } = useLocation();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const fetchPost = async () => {\n      const res = await axios.get(\"/prints\" + search);\n      setPosts(res.data);\n    };\n\n    fetchPost();\n  }, [search]); //-------------------------back-----------------------------\n\n  function initializeDrawingPanel() {\n    setHideOptions(!hideOptions);\n    setHideDrawingPanel(!hideDrawingPanel);\n    buttonText === \"start drawing\" ? setButtonText(\"reset\") : setButtonText(\"start drawing\");\n  }\n\n  function changeColor(color) {\n    setColor(color.hex);\n  }\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/colors');\n        const data = await response.json();\n        setColorsData(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchData();\n  }, []); // const ColorMatrix = ({ colors, width }) => {\n  //   // Разбиваем строку с цветами на массив\n  //   const colorArray = colors.split(' ');\n  //   // Генерируем стили для матрицы цветов\n  //   const matrixStyles = {\n  //     display: 'grid',\n  //     gridTemplateColumns: `repeat(${width}, 1fr)`,\n  //   };\n  //   return (\n  //     <div style={matrixStyles}>\n  //       {colorArray.map((color, index) => (\n  //         <div\n  //           key={index}\n  //           style={{\n  //             backgroundColor: color,\n  //             height: '1rem', // Вы можете настроить высоту ячеек по своему усмотрению\n  //           }}\n  //         />\n  //       ))}\n  //     </div>\n  //   );\n  // };\n  //--------------------------------------------------------\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"editor\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"tool\",\n      children: [/*#__PURE__*/_jsxDEV(CirclePicker, {\n        color: selectedColor,\n        onChangeComplete: changeColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChromePicker, {\n        color: selectedColor,\n        onChange: changeColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"workspace\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Pixel Editor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), hideDrawingPanel && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Enter Panel Dimensions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 30\n      }, this), hideDrawingPanel && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"options\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"panelInput\",\n            defaultValue: panelWidth,\n            onChange: e => {\n              setPanelWidth(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Width\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"panelInput\",\n            defaultValue: panelHeight,\n            onChange: e => {\n              setPanelHeight(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Height\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: initializeDrawingPanel,\n        className: \"button\",\n        children: buttonText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), hideOptions && /*#__PURE__*/_jsxDEV(DrawingPanel, {\n        width: panelWidth,\n        height: panelHeight,\n        selectedColor: selectedColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"printList\",\n      children: user ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slides\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"clrmatr\",\n          children: colorsData.map((data, index) => /*#__PURE__*/_jsxDEV(ColorMatrix, { ...data\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \" to login \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Editor, \"KQ/+0kJeE2M22Njjs1cyzFrgysE=\", false, function () {\n  return [useLocation];\n});\n\n_c = Editor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["React","useState","useContext","useEffect","ChromePicker","CirclePicker","DrawingPanel","ColorMatrix","axios","Link","useLocation","Context","Card","Editor","panelWidth","setPanelWidth","panelHeight","setPanelHeight","hideOptions","setHideOptions","hideDrawingPanel","setHideDrawingPanel","buttonText","setButtonText","selectedColor","setColor","colorsData","setColorsData","user","PublicFlo","search","posts","setPosts","fetchPost","res","get","data","initializeDrawingPanel","changeColor","color","hex","fetchData","response","fetch","json","error","console","e","target","value","map","index"],"sources":["D:/WebApp/app-blog/frontend/src/components/drawing/Editor.jsx"],"sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\nimport \"./editor.scss\";\r\nimport { ChromePicker, CirclePicker } from \"react-color\";\r\nimport DrawingPanel from \"./DrawingPanel\";\r\nimport ColorMatrix from \"./ColorMatrix\"\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\"\r\nimport { useLocation } from \"react-router-dom\"\r\nimport { Context } from \"../../context/Context\"\r\nimport { Card } from \"../blog/Card\";\r\n//import { print,colors } from \"../../assets/data/data\"\r\n\r\nexport const Editor = () => {\r\n  const [panelWidth, setPanelWidth] = useState(16);\r\n  const [panelHeight, setPanelHeight] = useState(16);\r\n  const [hideOptions, setHideOptions] = useState(false);\r\n  const [hideDrawingPanel, setHideDrawingPanel] = useState(true);\r\n  const [buttonText, setButtonText] = useState(\"start drawing\");\r\n  const [selectedColor, setColor] = useState(\"#f44336\");\r\n\r\n  const [colorsData, setColorsData] = useState([]);\r\n\r\n  const { user } = useContext(Context)\r\n  //-------------------------back-----------------------------\r\n  const PublicFlo = \"http://localhost:5000/images/\"\r\n  const { search } = useLocation()\r\n  \r\n  const [posts, setPosts] = useState([])\r\n  useEffect(() => {\r\n    const fetchPost = async () => {\r\n      const res = await axios.get(\"/prints\" + search)\r\n      setPosts(res.data)\r\n    }\r\n    fetchPost()\r\n  }, [search])\r\n  //-------------------------back-----------------------------\r\n\r\n\r\n  function initializeDrawingPanel() {\r\n    setHideOptions(!hideOptions);\r\n    setHideDrawingPanel(!hideDrawingPanel);\r\n\r\n    buttonText === \"start drawing\"\r\n      ? setButtonText(\"reset\")\r\n      : setButtonText(\"start drawing\");\r\n  }\r\n\r\n  function changeColor(color) {\r\n    setColor(color.hex);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/colors');\r\n        const data = await response.json();\r\n        setColorsData(data);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n\r\n\r\n  // const ColorMatrix = ({ colors, width }) => {\r\n  //   // Разбиваем строку с цветами на массив\r\n  //   const colorArray = colors.split(' ');\r\n  \r\n  //   // Генерируем стили для матрицы цветов\r\n  //   const matrixStyles = {\r\n  //     display: 'grid',\r\n  //     gridTemplateColumns: `repeat(${width}, 1fr)`,\r\n  //   };\r\n  \r\n  //   return (\r\n  //     <div style={matrixStyles}>\r\n  //       {colorArray.map((color, index) => (\r\n  //         <div\r\n  //           key={index}\r\n  //           style={{\r\n  //             backgroundColor: color,\r\n  //             height: '1rem', // Вы можете настроить высоту ячеек по своему усмотрению\r\n  //           }}\r\n  //         />\r\n  //       ))}\r\n  //     </div>\r\n  //   );\r\n  // };\r\n\r\n\r\n//--------------------------------------------------------\r\n  return (\r\n    <div id=\"editor\">\r\n\r\n      <div id=\"tool\">\r\n        <CirclePicker color={selectedColor} onChangeComplete={changeColor} />\r\n        <ChromePicker color={selectedColor} onChange={changeColor} />\r\n      </div>\r\n      \r\n      <div id=\"workspace\">\r\n        <h1>Pixel Editor</h1>\r\n        {hideDrawingPanel && <h2>Enter Panel Dimensions</h2>}\r\n        {hideDrawingPanel && (\r\n          <div id=\"options\">\r\n            <div className=\"option\">\r\n              <input\r\n                type=\"number\"\r\n                className=\"panelInput\"\r\n                defaultValue={panelWidth}\r\n                onChange={(e) => {\r\n                  setPanelWidth(e.target.value);\r\n                }}\r\n              />\r\n              <span>Width</span>\r\n            </div>\r\n            <div className=\"option\">\r\n              <input\r\n                type=\"number\"\r\n                className=\"panelInput\"\r\n                defaultValue={panelHeight}\r\n                onChange={(e) => {\r\n                  setPanelHeight(e.target.value);\r\n                }}\r\n              />\r\n              <span>Height</span>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <button onClick={initializeDrawingPanel} className=\"button\">\r\n          {buttonText}\r\n        </button>\r\n\r\n        {hideOptions && (\r\n          <DrawingPanel\r\n            width={panelWidth}\r\n            height={panelHeight}\r\n            selectedColor={selectedColor}\r\n          />\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"printList\">\r\n        {user ?(\r\n            <div className=\"slides\">\r\n              \r\n              <div className=\"clrmatr\">\r\n                {colorsData.map((data, index) => (\r\n                  <ColorMatrix key={index} {...data} />\r\n                ))}\r\n              </div>\r\n\r\n              \r\n            </div>\r\n          ):(\r\n            <button className=\"button\">\r\n              <Link to=\"/login\"> to login </Link>\r\n            </button>\r\n          )}\r\n      </div>\r\n      \r\n\r\n    </div>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}