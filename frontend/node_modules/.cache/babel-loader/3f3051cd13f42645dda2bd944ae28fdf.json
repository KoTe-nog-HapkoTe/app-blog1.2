{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebApp\\\\app-blog\\\\frontend\\\\src\\\\components\\\\drawing\\\\DrawingPanel.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useContext, useEffect } from \"react\";\nimport \"./drawingPanel.scss\";\nimport Row from \"./Row\";\nimport { Link } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\nimport { exportComponentAsPNG } from \"react-component-export-image\";\nimport axios from \"axios\";\nimport { Context } from \"../../context/Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DrawingPanel(props) {\n  _s();\n\n  const {\n    width,\n    height,\n    selectedColor\n  } = props;\n  const panelRef = useRef();\n  let rows = [];\n\n  for (let i = 0; i < height; i++) {\n    rows.push( /*#__PURE__*/_jsxDEV(Row, {\n      width: width,\n      selectedColor: selectedColor\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 15\n    }, this));\n  } // console.log(rows)\n\n\n  const [backgroundColors, setBackgroundColors] = useState([]);\n\n  const rgbToHex = rgb => {\n    const hex = rgb.replace(/^rgba?\\(|\\s+|\\)$/g, '').split(',').map(value => {\n      const intValue = parseInt(value, 10);\n      const hexValue = intValue.toString(16);\n      return hexValue.length === 1 ? '0' + hexValue : hexValue;\n    }).join('');\n    return `#${hex}`;\n  };\n\n  const getBackgroundColors = () => {\n    const pixelsContainer = document.getElementById('pixels');\n\n    if (pixelsContainer) {\n      const pixels = pixelsContainer.getElementsByTagName('div');\n      const colors = [];\n\n      for (let i = 0; i < pixels.length; i++) {\n        const pixel = pixels[i];\n        const computedStyle = window.getComputedStyle(pixel);\n        const backgroundColor = computedStyle.backgroundColor;\n        const hexColor = rgbToHex(backgroundColor);\n\n        if (hexColor !== '#00000000') {\n          colors.push(hexColor);\n        }\n      }\n\n      setBackgroundColors(colors); // console.log(colors);\n    }\n  }; //------------------------------------back---\n\n\n  const {\n    user\n  } = useContext(Context);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const newPrint = {\n      colors: colors,\n      width: width\n    };\n\n    try {\n      await axios.post(\"/prints\", newPrint);\n    } catch (error) {\n      console.error(error.message);\n    }\n  }; //------------------------------------back---\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"drawingPanel\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"pixels\",\n        required: true,\n        ref: panelRef,\n        children: rows\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => exportComponentAsPNG(panelRef),\n          className: \"button\",\n          children: \"Export as PNG\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), user ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: getBackgroundColors,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            children: \" to login \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DrawingPanel, \"lOk2ptWQK1go+zvfg3Yk2Ft8S7Q=\");\n\n_c = DrawingPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"DrawingPanel\");","map":{"version":3,"names":["React","useState","useRef","useContext","useEffect","Row","Link","useLocation","exportComponentAsPNG","axios","Context","DrawingPanel","props","width","height","selectedColor","panelRef","rows","i","push","backgroundColors","setBackgroundColors","rgbToHex","rgb","hex","replace","split","map","value","intValue","parseInt","hexValue","toString","length","join","getBackgroundColors","pixelsContainer","document","getElementById","pixels","getElementsByTagName","colors","pixel","computedStyle","window","getComputedStyle","backgroundColor","hexColor","user","handleSubmit","e","preventDefault","newPrint","post","error","console","message"],"sources":["D:/WebApp/app-blog/frontend/src/components/drawing/DrawingPanel.jsx"],"sourcesContent":["import React, {useState , useRef, useContext, useEffect } from \"react\";\r\nimport \"./drawingPanel.scss\";\r\nimport Row from \"./Row\";\r\nimport { Link } from \"react-router-dom\"\r\nimport { useLocation } from \"react-router-dom\"\r\nimport { exportComponentAsPNG } from \"react-component-export-image\";\r\nimport axios from \"axios\";\r\nimport { Context } from \"../../context/Context\"\r\n\r\n\r\n\r\nexport default function DrawingPanel(props) {\r\n  const { width, height, selectedColor } = props;\r\n\r\n  const panelRef = useRef();\r\n\r\n  let rows = [];\r\n\r\n  for (let i = 0; i < height; i++) {\r\n    rows.push(<Row key={i} width={width} selectedColor={selectedColor} />);\r\n  }\r\n\r\n  // console.log(rows)\r\n  const [backgroundColors, setBackgroundColors] = useState([]);\r\n\r\n  const rgbToHex = (rgb) => {\r\n    const hex = rgb\r\n      .replace(/^rgba?\\(|\\s+|\\)$/g, '')\r\n      .split(',')\r\n      .map((value) => {\r\n        const intValue = parseInt(value, 10);\r\n        const hexValue = intValue.toString(16);\r\n        return hexValue.length === 1 ? '0' + hexValue : hexValue;\r\n      })\r\n      .join('');\r\n    return `#${hex}`;\r\n  };\r\n\r\n  const getBackgroundColors = () => {\r\n    const pixelsContainer = document.getElementById('pixels');\r\n    if (pixelsContainer) {\r\n      const pixels = pixelsContainer.getElementsByTagName('div');\r\n      const colors = [];\r\n\r\n      for (let i = 0; i < pixels.length; i++) {\r\n        const pixel = pixels[i];\r\n        const computedStyle = window.getComputedStyle(pixel);\r\n        const backgroundColor = computedStyle.backgroundColor;\r\n\r\n        const hexColor = rgbToHex(backgroundColor);\r\n        if (hexColor !== '#00000000'){\r\n          colors.push(hexColor);\r\n        }\r\n      }\r\n\r\n      setBackgroundColors(colors);\r\n      // console.log(colors);\r\n    }\r\n  };\r\n\r\n//------------------------------------back---\r\n\r\n  const { user } = useContext(Context)\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n\r\n    const newPrint = {\r\n      colors: colors,\r\n      width: width,\r\n    }\r\n\r\n    try {\r\n      await axios.post(\"/prints\", newPrint)\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  }\r\n\r\n//------------------------------------back---\r\n\r\n  return (\r\n    <div id=\"drawingPanel\">\r\n      <form onSubmit={handleSubmit} >\r\n        <div id=\"pixels\" required ref={panelRef}>\r\n          {rows}\r\n        </div>\r\n        <div id=\"buttons\">\r\n          <button onClick={() => exportComponentAsPNG(panelRef)} className=\"button\">\r\n            Export as PNG\r\n          </button>\r\n          {user ?(\r\n            <button className=\"button\" onClick={getBackgroundColors} >\r\n              +\r\n            </button>\r\n          ):(        \r\n            <button className=\"button\">\r\n              <Link to=\"/login\"> to login </Link>\r\n            </button>         \r\n          )}\r\n          \r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}