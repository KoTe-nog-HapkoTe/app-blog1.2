{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebApp\\\\app-blog\\\\frontend\\\\src\\\\components\\\\drawing\\\\DrawingPanel.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport \"./drawingPanel.scss\";\nimport Row from \"./Row\";\nimport { exportComponentAsPNG } from \"react-component-export-image\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DrawingPanel = () => {\n  _s();\n\n  const {\n    width,\n    height,\n    selectedColor\n  } = props;\n  const panelRef = useRef();\n  let rows = [];\n\n  for (let i = 0; i < height; i++) {\n    rows.push( /*#__PURE__*/_jsxDEV(Row, {\n      width: width,\n      selectedColor: selectedColor\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 15\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"drawingPanel\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"pixels\",\n      ref: panelRef,\n      children: rows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => exportComponentAsPNG(panelRef),\n        className: \"button\",\n        children: \"Export as PNG\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DrawingPanel, \"+sE+kPbtOrGj5b9nlCfy3WDYqxA=\");\n\n_c = DrawingPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"DrawingPanel\");","map":{"version":3,"names":["React","useRef","Row","exportComponentAsPNG","DrawingPanel","width","height","selectedColor","props","panelRef","rows","i","push"],"sources":["D:/WebApp/app-blog/frontend/src/components/drawing/DrawingPanel.jsx"],"sourcesContent":["import React, { useRef } from \"react\";\r\nimport \"./drawingPanel.scss\";\r\nimport Row from \"./Row\";\r\nimport { exportComponentAsPNG } from \"react-component-export-image\";\r\n\r\nexport const DrawingPanel = () =>{\r\n    const { width, height, selectedColor } = props;\r\n\r\n  const panelRef = useRef();\r\n\r\n  let rows = [];\r\n\r\n  for (let i = 0; i < height; i++) {\r\n    rows.push(<Row key={i} width={width} selectedColor={selectedColor} />);\r\n  }\r\n\r\n  return (\r\n    <div id=\"drawingPanel\">\r\n      <div id=\"pixels\" ref={panelRef}>\r\n        {rows}\r\n      </div>\r\n      <div id = \"buttons\">\r\n        <button onClick={() => exportComponentAsPNG(panelRef)} className=\"button\">\r\n          Export as PNG\r\n        </button>\r\n        \r\n        <button className=\"button\">\r\n          +\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAO,qBAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,oBAAT,QAAqC,8BAArC;;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAK;EAAA;;EAC7B,MAAM;IAAEC,KAAF;IAASC,MAAT;IAAiBC;EAAjB,IAAmCC,KAAzC;EAEF,MAAMC,QAAQ,GAAGR,MAAM,EAAvB;EAEA,IAAIS,IAAI,GAAG,EAAX;;EAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,MAApB,EAA4BK,CAAC,EAA7B,EAAiC;IAC/BD,IAAI,CAACE,IAAL,eAAU,QAAC,GAAD;MAAa,KAAK,EAAEP,KAApB;MAA2B,aAAa,EAAEE;IAA1C,GAAUI,CAAV;MAAA;MAAA;MAAA;IAAA,QAAV;EACD;;EAED,oBACE;IAAK,EAAE,EAAC,cAAR;IAAA,wBACE;MAAK,EAAE,EAAC,QAAR;MAAiB,GAAG,EAAEF,QAAtB;MAAA,UACGC;IADH;MAAA;MAAA;MAAA;IAAA,QADF,eAIE;MAAK,EAAE,EAAG,SAAV;MAAA,wBACE;QAAQ,OAAO,EAAE,MAAMP,oBAAoB,CAACM,QAAD,CAA3C;QAAuD,SAAS,EAAC,QAAjE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAKE;QAAQ,SAAS,EAAC,QAAlB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD,CA3BM;;GAAML,Y;;KAAAA,Y"},"metadata":{},"sourceType":"module"}